// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "configuration.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Nous {

namespace {

const ::google::protobuf::Descriptor* Configuration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_reflection_ = NULL;
const ::google::protobuf::Descriptor* Configuration_Ogre_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_Ogre_reflection_ = NULL;
const ::google::protobuf::Descriptor* Configuration_Ogre_Video_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_Ogre_Video_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Configuration_Ogre_Video_RenderToTextureMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Configuration_Ogre_Resource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_Ogre_Resource_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Configuration_Ogre_Resource_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Configuration_Ogre_ResourceGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_Ogre_ResourceGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Configuration_Ogre_Resources_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_Ogre_Resources_reflection_ = NULL;
const ::google::protobuf::Descriptor* Configuration_Ogre_Plugins_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Configuration_Ogre_Plugins_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_configuration_2eproto() {
  protobuf_AddDesc_configuration_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "configuration.proto");
  GOOGLE_CHECK(file != NULL);
  Configuration_descriptor_ = file->message_type(0);
  static const int Configuration_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, ogre_),
  };
  Configuration_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_descriptor_,
      Configuration::default_instance_,
      Configuration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration));
  Configuration_Ogre_descriptor_ = Configuration_descriptor_->nested_type(0);
  static const int Configuration_Ogre_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre, video_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre, resources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre, plugins_),
  };
  Configuration_Ogre_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_Ogre_descriptor_,
      Configuration_Ogre::default_instance_,
      Configuration_Ogre_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration_Ogre));
  Configuration_Ogre_Video_descriptor_ = Configuration_Ogre_descriptor_->nested_type(0);
  static const int Configuration_Ogre_Video_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, render_system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, antialiasing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, fullscreen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, rtt_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, vsync_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, srgb_gamma_conversion_),
  };
  Configuration_Ogre_Video_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_Ogre_Video_descriptor_,
      Configuration_Ogre_Video::default_instance_,
      Configuration_Ogre_Video_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Video, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration_Ogre_Video));
  Configuration_Ogre_Video_RenderToTextureMode_descriptor_ = Configuration_Ogre_Video_descriptor_->enum_type(0);
  Configuration_Ogre_Resource_descriptor_ = Configuration_Ogre_descriptor_->nested_type(1);
  static const int Configuration_Ogre_Resource_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resource, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resource, path_),
  };
  Configuration_Ogre_Resource_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_Ogre_Resource_descriptor_,
      Configuration_Ogre_Resource::default_instance_,
      Configuration_Ogre_Resource_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resource, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resource, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration_Ogre_Resource));
  Configuration_Ogre_Resource_Type_descriptor_ = Configuration_Ogre_Resource_descriptor_->enum_type(0);
  Configuration_Ogre_ResourceGroup_descriptor_ = Configuration_Ogre_descriptor_->nested_type(2);
  static const int Configuration_Ogre_ResourceGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_ResourceGroup, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_ResourceGroup, resource_),
  };
  Configuration_Ogre_ResourceGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_Ogre_ResourceGroup_descriptor_,
      Configuration_Ogre_ResourceGroup::default_instance_,
      Configuration_Ogre_ResourceGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_ResourceGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_ResourceGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration_Ogre_ResourceGroup));
  Configuration_Ogre_Resources_descriptor_ = Configuration_Ogre_descriptor_->nested_type(3);
  static const int Configuration_Ogre_Resources_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resources, group_),
  };
  Configuration_Ogre_Resources_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_Ogre_Resources_descriptor_,
      Configuration_Ogre_Resources::default_instance_,
      Configuration_Ogre_Resources_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resources, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Resources, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration_Ogre_Resources));
  Configuration_Ogre_Plugins_descriptor_ = Configuration_Ogre_descriptor_->nested_type(4);
  static const int Configuration_Ogre_Plugins_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Plugins, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Plugins, name_),
  };
  Configuration_Ogre_Plugins_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Configuration_Ogre_Plugins_descriptor_,
      Configuration_Ogre_Plugins::default_instance_,
      Configuration_Ogre_Plugins_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Plugins, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Configuration_Ogre_Plugins, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Configuration_Ogre_Plugins));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_configuration_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_descriptor_, &Configuration::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_Ogre_descriptor_, &Configuration_Ogre::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_Ogre_Video_descriptor_, &Configuration_Ogre_Video::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_Ogre_Resource_descriptor_, &Configuration_Ogre_Resource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_Ogre_ResourceGroup_descriptor_, &Configuration_Ogre_ResourceGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_Ogre_Resources_descriptor_, &Configuration_Ogre_Resources::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Configuration_Ogre_Plugins_descriptor_, &Configuration_Ogre_Plugins::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_configuration_2eproto() {
  delete Configuration::default_instance_;
  delete Configuration_reflection_;
  delete Configuration_Ogre::default_instance_;
  delete Configuration_Ogre_reflection_;
  delete Configuration_Ogre_Video::default_instance_;
  delete Configuration_Ogre_Video_reflection_;
  delete Configuration_Ogre_Resource::default_instance_;
  delete Configuration_Ogre_Resource_reflection_;
  delete Configuration_Ogre_ResourceGroup::default_instance_;
  delete Configuration_Ogre_ResourceGroup_reflection_;
  delete Configuration_Ogre_Resources::default_instance_;
  delete Configuration_Ogre_Resources_reflection_;
  delete Configuration_Ogre_Plugins::default_instance_;
  delete Configuration_Ogre_Plugins_reflection_;
}

void protobuf_AddDesc_configuration_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023configuration.proto\022\004Nous\"\372\006\n\rConfigur"
    "ation\022&\n\004ogre\030\001 \001(\0132\030.Nous.Configuration"
    ".Ogre\032\300\006\n\004Ogre\022-\n\005video\030\001 \002(\0132\036.Nous.Con"
    "figuration.Ogre.Video\0225\n\tresources\030\002 \001(\013"
    "2\".Nous.Configuration.Ogre.Resources\0221\n\007"
    "plugins\030\003 \001(\0132 .Nous.Configuration.Ogre."
    "Plugins\032\342\002\n\005Video\0221\n\rrender_system\030\001 \002(\t"
    ":\032OpenGL Rendering Subsystem\022\025\n\tfrequenc"
    "y\030\002 \002(\r:\00250\022\027\n\014antialiasing\030\003 \001(\r:\0010\022\031\n\n"
    "fullscreen\030\004 \001(\010:\005false\022I\n\010rtt_mode\030\005 \001("
    "\01622.Nous.Configuration.Ogre.Video.Render"
    "ToTextureMode:\003FBO\022\024\n\005vsync\030\006 \001(\010:\005false"
    "\022\022\n\005width\030\007 \001(\r:\003800\022\023\n\006height\030\010 \001(\r:\00360"
    "0\022$\n\025srgb_gamma_conversion\030\t \001(\010:\005false\""
    "+\n\023RenderToTextureMode\022\007\n\003FBO\020\000\022\013\n\007PBUFF"
    "ER\020\001\032{\n\010Resource\0224\n\004type\030\001 \002(\0162&.Nous.Co"
    "nfiguration.Ogre.Resource.Type\022\014\n\004path\030\002"
    " \002(\t\"+\n\004Type\022\016\n\nFILESYSTEM\020\000\022\007\n\003ZIP\020\001\022\n\n"
    "\006CUSTOM\020\002\032R\n\rResourceGroup\022\014\n\004name\030\001 \002(\t"
    "\0223\n\010resource\030\002 \003(\0132!.Nous.Configuration."
    "Ogre.Resource\032B\n\tResources\0225\n\005group\030\001 \003("
    "\0132&.Nous.Configuration.Ogre.ResourceGrou"
    "p\032%\n\007Plugins\022\014\n\004path\030\001 \003(\t\022\014\n\004name\030\002 \003(\t", 920);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "configuration.proto", &protobuf_RegisterTypes);
  Configuration::default_instance_ = new Configuration();
  Configuration_Ogre::default_instance_ = new Configuration_Ogre();
  Configuration_Ogre_Video::default_instance_ = new Configuration_Ogre_Video();
  Configuration_Ogre_Resource::default_instance_ = new Configuration_Ogre_Resource();
  Configuration_Ogre_ResourceGroup::default_instance_ = new Configuration_Ogre_ResourceGroup();
  Configuration_Ogre_Resources::default_instance_ = new Configuration_Ogre_Resources();
  Configuration_Ogre_Plugins::default_instance_ = new Configuration_Ogre_Plugins();
  Configuration::default_instance_->InitAsDefaultInstance();
  Configuration_Ogre::default_instance_->InitAsDefaultInstance();
  Configuration_Ogre_Video::default_instance_->InitAsDefaultInstance();
  Configuration_Ogre_Resource::default_instance_->InitAsDefaultInstance();
  Configuration_Ogre_ResourceGroup::default_instance_->InitAsDefaultInstance();
  Configuration_Ogre_Resources::default_instance_->InitAsDefaultInstance();
  Configuration_Ogre_Plugins::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_configuration_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_configuration_2eproto {
  StaticDescriptorInitializer_configuration_2eproto() {
    protobuf_AddDesc_configuration_2eproto();
  }
} static_descriptor_initializer_configuration_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* Configuration_Ogre_Video_RenderToTextureMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_Video_RenderToTextureMode_descriptor_;
}
bool Configuration_Ogre_Video_RenderToTextureMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Configuration_Ogre_Video_RenderToTextureMode Configuration_Ogre_Video::FBO;
const Configuration_Ogre_Video_RenderToTextureMode Configuration_Ogre_Video::PBUFFER;
const Configuration_Ogre_Video_RenderToTextureMode Configuration_Ogre_Video::RenderToTextureMode_MIN;
const Configuration_Ogre_Video_RenderToTextureMode Configuration_Ogre_Video::RenderToTextureMode_MAX;
const int Configuration_Ogre_Video::RenderToTextureMode_ARRAYSIZE;
#endif  // _MSC_VER
const ::std::string Configuration_Ogre_Video::_default_render_system_("OpenGL Rendering Subsystem");
#ifndef _MSC_VER
const int Configuration_Ogre_Video::kRenderSystemFieldNumber;
const int Configuration_Ogre_Video::kFrequencyFieldNumber;
const int Configuration_Ogre_Video::kAntialiasingFieldNumber;
const int Configuration_Ogre_Video::kFullscreenFieldNumber;
const int Configuration_Ogre_Video::kRttModeFieldNumber;
const int Configuration_Ogre_Video::kVsyncFieldNumber;
const int Configuration_Ogre_Video::kWidthFieldNumber;
const int Configuration_Ogre_Video::kHeightFieldNumber;
const int Configuration_Ogre_Video::kSrgbGammaConversionFieldNumber;
#endif  // !_MSC_VER

Configuration_Ogre_Video::Configuration_Ogre_Video()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration_Ogre_Video::InitAsDefaultInstance() {
}

Configuration_Ogre_Video::Configuration_Ogre_Video(const Configuration_Ogre_Video& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration_Ogre_Video::SharedCtor() {
  _cached_size_ = 0;
  render_system_ = const_cast< ::std::string*>(&_default_render_system_);
  frequency_ = 50u;
  antialiasing_ = 0u;
  fullscreen_ = false;
  rtt_mode_ = 0;
  vsync_ = false;
  width_ = 800u;
  height_ = 600u;
  srgb_gamma_conversion_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration_Ogre_Video::~Configuration_Ogre_Video() {
  SharedDtor();
}

void Configuration_Ogre_Video::SharedDtor() {
  if (render_system_ != &_default_render_system_) {
    delete render_system_;
  }
  if (this != default_instance_) {
  }
}

void Configuration_Ogre_Video::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration_Ogre_Video::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_Video_descriptor_;
}

const Configuration_Ogre_Video& Configuration_Ogre_Video::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration_Ogre_Video* Configuration_Ogre_Video::default_instance_ = NULL;

Configuration_Ogre_Video* Configuration_Ogre_Video::New() const {
  return new Configuration_Ogre_Video;
}

void Configuration_Ogre_Video::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (render_system_ != &_default_render_system_) {
        render_system_->assign(_default_render_system_);
      }
    }
    frequency_ = 50u;
    antialiasing_ = 0u;
    fullscreen_ = false;
    rtt_mode_ = 0;
    vsync_ = false;
    width_ = 800u;
    height_ = 600u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    srgb_gamma_conversion_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration_Ogre_Video::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string render_system = 1 [default = "OpenGL Rendering Subsystem"];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_render_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->render_system().data(), this->render_system().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_frequency;
        break;
      }
      
      // required uint32 frequency = 2 [default = 50];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_frequency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frequency_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_antialiasing;
        break;
      }
      
      // optional uint32 antialiasing = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_antialiasing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &antialiasing_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fullscreen;
        break;
      }
      
      // optional bool fullscreen = 4 [default = false];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fullscreen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fullscreen_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rtt_mode;
        break;
      }
      
      // optional .Nous.Configuration.Ogre.Video.RenderToTextureMode rtt_mode = 5 [default = FBO];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rtt_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Nous::Configuration_Ogre_Video_RenderToTextureMode_IsValid(value)) {
            set_rtt_mode(static_cast< ::Nous::Configuration_Ogre_Video_RenderToTextureMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_vsync;
        break;
      }
      
      // optional bool vsync = 6 [default = false];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vsync:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vsync_)));
          _set_bit(5);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_width;
        break;
      }
      
      // optional uint32 width = 7 [default = 800];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
          _set_bit(6);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_height;
        break;
      }
      
      // optional uint32 height = 8 [default = 600];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
          _set_bit(7);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_srgb_gamma_conversion;
        break;
      }
      
      // optional bool srgb_gamma_conversion = 9 [default = false];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srgb_gamma_conversion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &srgb_gamma_conversion_)));
          _set_bit(8);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration_Ogre_Video::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string render_system = 1 [default = "OpenGL Rendering Subsystem"];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->render_system().data(), this->render_system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->render_system(), output);
  }
  
  // required uint32 frequency = 2 [default = 50];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frequency(), output);
  }
  
  // optional uint32 antialiasing = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->antialiasing(), output);
  }
  
  // optional bool fullscreen = 4 [default = false];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->fullscreen(), output);
  }
  
  // optional .Nous.Configuration.Ogre.Video.RenderToTextureMode rtt_mode = 5 [default = FBO];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->rtt_mode(), output);
  }
  
  // optional bool vsync = 6 [default = false];
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->vsync(), output);
  }
  
  // optional uint32 width = 7 [default = 800];
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->width(), output);
  }
  
  // optional uint32 height = 8 [default = 600];
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->height(), output);
  }
  
  // optional bool srgb_gamma_conversion = 9 [default = false];
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->srgb_gamma_conversion(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration_Ogre_Video::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string render_system = 1 [default = "OpenGL Rendering Subsystem"];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->render_system().data(), this->render_system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->render_system(), target);
  }
  
  // required uint32 frequency = 2 [default = 50];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frequency(), target);
  }
  
  // optional uint32 antialiasing = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->antialiasing(), target);
  }
  
  // optional bool fullscreen = 4 [default = false];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->fullscreen(), target);
  }
  
  // optional .Nous.Configuration.Ogre.Video.RenderToTextureMode rtt_mode = 5 [default = FBO];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->rtt_mode(), target);
  }
  
  // optional bool vsync = 6 [default = false];
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->vsync(), target);
  }
  
  // optional uint32 width = 7 [default = 800];
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->width(), target);
  }
  
  // optional uint32 height = 8 [default = 600];
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->height(), target);
  }
  
  // optional bool srgb_gamma_conversion = 9 [default = false];
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->srgb_gamma_conversion(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration_Ogre_Video::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string render_system = 1 [default = "OpenGL Rendering Subsystem"];
    if (has_render_system()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->render_system());
    }
    
    // required uint32 frequency = 2 [default = 50];
    if (has_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->frequency());
    }
    
    // optional uint32 antialiasing = 3 [default = 0];
    if (has_antialiasing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->antialiasing());
    }
    
    // optional bool fullscreen = 4 [default = false];
    if (has_fullscreen()) {
      total_size += 1 + 1;
    }
    
    // optional .Nous.Configuration.Ogre.Video.RenderToTextureMode rtt_mode = 5 [default = FBO];
    if (has_rtt_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rtt_mode());
    }
    
    // optional bool vsync = 6 [default = false];
    if (has_vsync()) {
      total_size += 1 + 1;
    }
    
    // optional uint32 width = 7 [default = 800];
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }
    
    // optional uint32 height = 8 [default = 600];
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool srgb_gamma_conversion = 9 [default = false];
    if (has_srgb_gamma_conversion()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration_Ogre_Video::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration_Ogre_Video* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration_Ogre_Video*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration_Ogre_Video::MergeFrom(const Configuration_Ogre_Video& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_render_system(from.render_system());
    }
    if (from._has_bit(1)) {
      set_frequency(from.frequency());
    }
    if (from._has_bit(2)) {
      set_antialiasing(from.antialiasing());
    }
    if (from._has_bit(3)) {
      set_fullscreen(from.fullscreen());
    }
    if (from._has_bit(4)) {
      set_rtt_mode(from.rtt_mode());
    }
    if (from._has_bit(5)) {
      set_vsync(from.vsync());
    }
    if (from._has_bit(6)) {
      set_width(from.width());
    }
    if (from._has_bit(7)) {
      set_height(from.height());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_srgb_gamma_conversion(from.srgb_gamma_conversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration_Ogre_Video::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration_Ogre_Video::CopyFrom(const Configuration_Ogre_Video& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration_Ogre_Video::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Configuration_Ogre_Video::Swap(Configuration_Ogre_Video* other) {
  if (other != this) {
    std::swap(render_system_, other->render_system_);
    std::swap(frequency_, other->frequency_);
    std::swap(antialiasing_, other->antialiasing_);
    std::swap(fullscreen_, other->fullscreen_);
    std::swap(rtt_mode_, other->rtt_mode_);
    std::swap(vsync_, other->vsync_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(srgb_gamma_conversion_, other->srgb_gamma_conversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration_Ogre_Video::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_Ogre_Video_descriptor_;
  metadata.reflection = Configuration_Ogre_Video_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* Configuration_Ogre_Resource_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_Resource_Type_descriptor_;
}
bool Configuration_Ogre_Resource_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Configuration_Ogre_Resource_Type Configuration_Ogre_Resource::FILESYSTEM;
const Configuration_Ogre_Resource_Type Configuration_Ogre_Resource::ZIP;
const Configuration_Ogre_Resource_Type Configuration_Ogre_Resource::CUSTOM;
const Configuration_Ogre_Resource_Type Configuration_Ogre_Resource::Type_MIN;
const Configuration_Ogre_Resource_Type Configuration_Ogre_Resource::Type_MAX;
const int Configuration_Ogre_Resource::Type_ARRAYSIZE;
#endif  // _MSC_VER
const ::std::string Configuration_Ogre_Resource::_default_path_;
#ifndef _MSC_VER
const int Configuration_Ogre_Resource::kTypeFieldNumber;
const int Configuration_Ogre_Resource::kPathFieldNumber;
#endif  // !_MSC_VER

Configuration_Ogre_Resource::Configuration_Ogre_Resource()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration_Ogre_Resource::InitAsDefaultInstance() {
}

Configuration_Ogre_Resource::Configuration_Ogre_Resource(const Configuration_Ogre_Resource& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration_Ogre_Resource::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  path_ = const_cast< ::std::string*>(&_default_path_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration_Ogre_Resource::~Configuration_Ogre_Resource() {
  SharedDtor();
}

void Configuration_Ogre_Resource::SharedDtor() {
  if (path_ != &_default_path_) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Configuration_Ogre_Resource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration_Ogre_Resource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_Resource_descriptor_;
}

const Configuration_Ogre_Resource& Configuration_Ogre_Resource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration_Ogre_Resource* Configuration_Ogre_Resource::default_instance_ = NULL;

Configuration_Ogre_Resource* Configuration_Ogre_Resource::New() const {
  return new Configuration_Ogre_Resource;
}

void Configuration_Ogre_Resource::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (_has_bit(1)) {
      if (path_ != &_default_path_) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration_Ogre_Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Nous.Configuration.Ogre.Resource.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Nous::Configuration_Ogre_Resource_Type_IsValid(value)) {
            set_type(static_cast< ::Nous::Configuration_Ogre_Resource_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }
      
      // required string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration_Ogre_Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Nous.Configuration.Ogre.Resource.Type type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // required string path = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration_Ogre_Resource::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Nous.Configuration.Ogre.Resource.Type type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // required string path = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration_Ogre_Resource::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Nous.Configuration.Ogre.Resource.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration_Ogre_Resource::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration_Ogre_Resource* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration_Ogre_Resource*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration_Ogre_Resource::MergeFrom(const Configuration_Ogre_Resource& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration_Ogre_Resource::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration_Ogre_Resource::CopyFrom(const Configuration_Ogre_Resource& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration_Ogre_Resource::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Configuration_Ogre_Resource::Swap(Configuration_Ogre_Resource* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration_Ogre_Resource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_Ogre_Resource_descriptor_;
  metadata.reflection = Configuration_Ogre_Resource_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::std::string Configuration_Ogre_ResourceGroup::_default_name_;
#ifndef _MSC_VER
const int Configuration_Ogre_ResourceGroup::kNameFieldNumber;
const int Configuration_Ogre_ResourceGroup::kResourceFieldNumber;
#endif  // !_MSC_VER

Configuration_Ogre_ResourceGroup::Configuration_Ogre_ResourceGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration_Ogre_ResourceGroup::InitAsDefaultInstance() {
}

Configuration_Ogre_ResourceGroup::Configuration_Ogre_ResourceGroup(const Configuration_Ogre_ResourceGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration_Ogre_ResourceGroup::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration_Ogre_ResourceGroup::~Configuration_Ogre_ResourceGroup() {
  SharedDtor();
}

void Configuration_Ogre_ResourceGroup::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Configuration_Ogre_ResourceGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration_Ogre_ResourceGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_ResourceGroup_descriptor_;
}

const Configuration_Ogre_ResourceGroup& Configuration_Ogre_ResourceGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration_Ogre_ResourceGroup* Configuration_Ogre_ResourceGroup::default_instance_ = NULL;

Configuration_Ogre_ResourceGroup* Configuration_Ogre_ResourceGroup::New() const {
  return new Configuration_Ogre_ResourceGroup;
}

void Configuration_Ogre_ResourceGroup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
  }
  resource_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration_Ogre_ResourceGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resource;
        break;
      }
      
      // repeated .Nous.Configuration.Ogre.Resource resource = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resource()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resource;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration_Ogre_ResourceGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // repeated .Nous.Configuration.Ogre.Resource resource = 2;
  for (int i = 0; i < this->resource_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resource(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration_Ogre_ResourceGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // repeated .Nous.Configuration.Ogre.Resource resource = 2;
  for (int i = 0; i < this->resource_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resource(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration_Ogre_ResourceGroup::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .Nous.Configuration.Ogre.Resource resource = 2;
  total_size += 1 * this->resource_size();
  for (int i = 0; i < this->resource_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resource(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration_Ogre_ResourceGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration_Ogre_ResourceGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration_Ogre_ResourceGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration_Ogre_ResourceGroup::MergeFrom(const Configuration_Ogre_ResourceGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  resource_.MergeFrom(from.resource_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration_Ogre_ResourceGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration_Ogre_ResourceGroup::CopyFrom(const Configuration_Ogre_ResourceGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration_Ogre_ResourceGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < resource_size(); i++) {
    if (!this->resource(i).IsInitialized()) return false;
  }
  return true;
}

void Configuration_Ogre_ResourceGroup::Swap(Configuration_Ogre_ResourceGroup* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    resource_.Swap(&other->resource_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration_Ogre_ResourceGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_Ogre_ResourceGroup_descriptor_;
  metadata.reflection = Configuration_Ogre_ResourceGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Configuration_Ogre_Resources::kGroupFieldNumber;
#endif  // !_MSC_VER

Configuration_Ogre_Resources::Configuration_Ogre_Resources()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration_Ogre_Resources::InitAsDefaultInstance() {
}

Configuration_Ogre_Resources::Configuration_Ogre_Resources(const Configuration_Ogre_Resources& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration_Ogre_Resources::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration_Ogre_Resources::~Configuration_Ogre_Resources() {
  SharedDtor();
}

void Configuration_Ogre_Resources::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Configuration_Ogre_Resources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration_Ogre_Resources::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_Resources_descriptor_;
}

const Configuration_Ogre_Resources& Configuration_Ogre_Resources::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration_Ogre_Resources* Configuration_Ogre_Resources::default_instance_ = NULL;

Configuration_Ogre_Resources* Configuration_Ogre_Resources::New() const {
  return new Configuration_Ogre_Resources;
}

void Configuration_Ogre_Resources::Clear() {
  group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration_Ogre_Resources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Nous.Configuration.Ogre.ResourceGroup group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_group;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration_Ogre_Resources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Nous.Configuration.Ogre.ResourceGroup group = 1;
  for (int i = 0; i < this->group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->group(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration_Ogre_Resources::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Nous.Configuration.Ogre.ResourceGroup group = 1;
  for (int i = 0; i < this->group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->group(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration_Ogre_Resources::ByteSize() const {
  int total_size = 0;
  
  // repeated .Nous.Configuration.Ogre.ResourceGroup group = 1;
  total_size += 1 * this->group_size();
  for (int i = 0; i < this->group_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->group(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration_Ogre_Resources::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration_Ogre_Resources* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration_Ogre_Resources*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration_Ogre_Resources::MergeFrom(const Configuration_Ogre_Resources& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_.MergeFrom(from.group_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration_Ogre_Resources::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration_Ogre_Resources::CopyFrom(const Configuration_Ogre_Resources& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration_Ogre_Resources::IsInitialized() const {
  
  for (int i = 0; i < group_size(); i++) {
    if (!this->group(i).IsInitialized()) return false;
  }
  return true;
}

void Configuration_Ogre_Resources::Swap(Configuration_Ogre_Resources* other) {
  if (other != this) {
    group_.Swap(&other->group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration_Ogre_Resources::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_Ogre_Resources_descriptor_;
  metadata.reflection = Configuration_Ogre_Resources_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Configuration_Ogre_Plugins::kPathFieldNumber;
const int Configuration_Ogre_Plugins::kNameFieldNumber;
#endif  // !_MSC_VER

Configuration_Ogre_Plugins::Configuration_Ogre_Plugins()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration_Ogre_Plugins::InitAsDefaultInstance() {
}

Configuration_Ogre_Plugins::Configuration_Ogre_Plugins(const Configuration_Ogre_Plugins& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration_Ogre_Plugins::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration_Ogre_Plugins::~Configuration_Ogre_Plugins() {
  SharedDtor();
}

void Configuration_Ogre_Plugins::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Configuration_Ogre_Plugins::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration_Ogre_Plugins::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_Plugins_descriptor_;
}

const Configuration_Ogre_Plugins& Configuration_Ogre_Plugins::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration_Ogre_Plugins* Configuration_Ogre_Plugins::default_instance_ = NULL;

Configuration_Ogre_Plugins* Configuration_Ogre_Plugins::New() const {
  return new Configuration_Ogre_Plugins;
}

void Configuration_Ogre_Plugins::Clear() {
  path_.Clear();
  name_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration_Ogre_Plugins::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path(0).data(), this->path(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_path;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // repeated string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name(0).data(), this->name(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration_Ogre_Plugins::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->path(i).data(), this->path(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(i), output);
  }
  
  // repeated string name = 2;
  for (int i = 0; i < this->name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->name(i).data(), this->name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration_Ogre_Plugins::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path(i).data(), this->path(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->path(i), target);
  }
  
  // repeated string name = 2;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->name(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration_Ogre_Plugins::ByteSize() const {
  int total_size = 0;
  
  // repeated string path = 1;
  total_size += 1 * this->path_size();
  for (int i = 0; i < this->path_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }
  
  // repeated string name = 2;
  total_size += 1 * this->name_size();
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration_Ogre_Plugins::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration_Ogre_Plugins* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration_Ogre_Plugins*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration_Ogre_Plugins::MergeFrom(const Configuration_Ogre_Plugins& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_.MergeFrom(from.path_);
  name_.MergeFrom(from.name_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration_Ogre_Plugins::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration_Ogre_Plugins::CopyFrom(const Configuration_Ogre_Plugins& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration_Ogre_Plugins::IsInitialized() const {
  
  return true;
}

void Configuration_Ogre_Plugins::Swap(Configuration_Ogre_Plugins* other) {
  if (other != this) {
    path_.Swap(&other->path_);
    name_.Swap(&other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration_Ogre_Plugins::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_Ogre_Plugins_descriptor_;
  metadata.reflection = Configuration_Ogre_Plugins_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Configuration_Ogre::kVideoFieldNumber;
const int Configuration_Ogre::kResourcesFieldNumber;
const int Configuration_Ogre::kPluginsFieldNumber;
#endif  // !_MSC_VER

Configuration_Ogre::Configuration_Ogre()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration_Ogre::InitAsDefaultInstance() {
  video_ = const_cast< ::Nous::Configuration_Ogre_Video*>(&::Nous::Configuration_Ogre_Video::default_instance());
  resources_ = const_cast< ::Nous::Configuration_Ogre_Resources*>(&::Nous::Configuration_Ogre_Resources::default_instance());
  plugins_ = const_cast< ::Nous::Configuration_Ogre_Plugins*>(&::Nous::Configuration_Ogre_Plugins::default_instance());
}

Configuration_Ogre::Configuration_Ogre(const Configuration_Ogre& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration_Ogre::SharedCtor() {
  _cached_size_ = 0;
  video_ = NULL;
  resources_ = NULL;
  plugins_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration_Ogre::~Configuration_Ogre() {
  SharedDtor();
}

void Configuration_Ogre::SharedDtor() {
  if (this != default_instance_) {
    delete video_;
    delete resources_;
    delete plugins_;
  }
}

void Configuration_Ogre::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration_Ogre::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_Ogre_descriptor_;
}

const Configuration_Ogre& Configuration_Ogre::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration_Ogre* Configuration_Ogre::default_instance_ = NULL;

Configuration_Ogre* Configuration_Ogre::New() const {
  return new Configuration_Ogre;
}

void Configuration_Ogre::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (video_ != NULL) video_->::Nous::Configuration_Ogre_Video::Clear();
    }
    if (_has_bit(1)) {
      if (resources_ != NULL) resources_->::Nous::Configuration_Ogre_Resources::Clear();
    }
    if (_has_bit(2)) {
      if (plugins_ != NULL) plugins_->::Nous::Configuration_Ogre_Plugins::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration_Ogre::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Nous.Configuration.Ogre.Video video = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_video()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resources;
        break;
      }
      
      // optional .Nous.Configuration.Ogre.Resources resources = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_plugins;
        break;
      }
      
      // optional .Nous.Configuration.Ogre.Plugins plugins = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_plugins:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_plugins()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration_Ogre::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Nous.Configuration.Ogre.Video video = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->video(), output);
  }
  
  // optional .Nous.Configuration.Ogre.Resources resources = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(), output);
  }
  
  // optional .Nous.Configuration.Ogre.Plugins plugins = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->plugins(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration_Ogre::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Nous.Configuration.Ogre.Video video = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->video(), target);
  }
  
  // optional .Nous.Configuration.Ogre.Resources resources = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resources(), target);
  }
  
  // optional .Nous.Configuration.Ogre.Plugins plugins = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->plugins(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration_Ogre::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Nous.Configuration.Ogre.Video video = 1;
    if (has_video()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->video());
    }
    
    // optional .Nous.Configuration.Ogre.Resources resources = 2;
    if (has_resources()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resources());
    }
    
    // optional .Nous.Configuration.Ogre.Plugins plugins = 3;
    if (has_plugins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->plugins());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration_Ogre::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration_Ogre* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration_Ogre*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration_Ogre::MergeFrom(const Configuration_Ogre& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_video()->::Nous::Configuration_Ogre_Video::MergeFrom(from.video());
    }
    if (from._has_bit(1)) {
      mutable_resources()->::Nous::Configuration_Ogre_Resources::MergeFrom(from.resources());
    }
    if (from._has_bit(2)) {
      mutable_plugins()->::Nous::Configuration_Ogre_Plugins::MergeFrom(from.plugins());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration_Ogre::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration_Ogre::CopyFrom(const Configuration_Ogre& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration_Ogre::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_video()) {
    if (!this->video().IsInitialized()) return false;
  }
  if (has_resources()) {
    if (!this->resources().IsInitialized()) return false;
  }
  return true;
}

void Configuration_Ogre::Swap(Configuration_Ogre* other) {
  if (other != this) {
    std::swap(video_, other->video_);
    std::swap(resources_, other->resources_);
    std::swap(plugins_, other->plugins_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration_Ogre::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_Ogre_descriptor_;
  metadata.reflection = Configuration_Ogre_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Configuration::kOgreFieldNumber;
#endif  // !_MSC_VER

Configuration::Configuration()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Configuration::InitAsDefaultInstance() {
  ogre_ = const_cast< ::Nous::Configuration_Ogre*>(&::Nous::Configuration_Ogre::default_instance());
}

Configuration::Configuration(const Configuration& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Configuration::SharedCtor() {
  _cached_size_ = 0;
  ogre_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Configuration::~Configuration() {
  SharedDtor();
}

void Configuration::SharedDtor() {
  if (this != default_instance_) {
    delete ogre_;
  }
}

void Configuration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Configuration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Configuration_descriptor_;
}

const Configuration& Configuration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configuration_2eproto();  return *default_instance_;
}

Configuration* Configuration::default_instance_ = NULL;

Configuration* Configuration::New() const {
  return new Configuration;
}

void Configuration::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (ogre_ != NULL) ogre_->::Nous::Configuration_Ogre::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Configuration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Nous.Configuration.Ogre ogre = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ogre()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Configuration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .Nous.Configuration.Ogre ogre = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ogre(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Configuration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Nous.Configuration.Ogre ogre = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ogre(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Configuration::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Nous.Configuration.Ogre ogre = 1;
    if (has_ogre()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ogre());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Configuration::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Configuration* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Configuration*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Configuration::MergeFrom(const Configuration& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_ogre()->::Nous::Configuration_Ogre::MergeFrom(from.ogre());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Configuration::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration::CopyFrom(const Configuration& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration::IsInitialized() const {
  
  if (has_ogre()) {
    if (!this->ogre().IsInitialized()) return false;
  }
  return true;
}

void Configuration::Swap(Configuration* other) {
  if (other != this) {
    std::swap(ogre_, other->ogre_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Configuration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Configuration_descriptor_;
  metadata.reflection = Configuration_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Nous

// @@protoc_insertion_point(global_scope)
